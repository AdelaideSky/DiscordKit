{"seeAlsoSections":[{"title":"Low-level Socket Management","identifiers":["doc:\/\/DiscordKit\/documentation\/DiscordKit\/DecompressionEngine"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RobustWebSocket"}],"title":"RobustWebSocket","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"c:@M@DiscordKit@objc(cs)RobustWebSocket","modules":[{"name":"DiscordKit"}],"navigatorTitle":[{"kind":"identifier","text":"RobustWebSocket"}]},"abstract":[{"type":"text","text":"A robust WebSocket that handles resuming, reconnection and heartbeats"},{"type":"text","text":" "},{"type":"text","text":"with the Discord Gateway"}],"sections":[],"identifier":{"url":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":[],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/DiscordKit\/7Combine16ObservableObjectP","doc:\/\/DiscordKit\/objc(pl)NSURLSessionDelegate","doc:\/\/DiscordKit\/objc(pl)NSURLSessionTaskDelegate","doc:\/\/DiscordKit\/objc(pl)NSURLSessionWebSocketDelegate","doc:\/\/DiscordKit\/objc(pl)NSObject","doc:\/\/DiscordKit\/s7CVarArgP","doc:\/\/DiscordKit\/s28CustomDebugStringConvertibleP","doc:\/\/DiscordKit\/s23CustomStringConvertibleP","doc:\/\/DiscordKit\/SQ","doc:\/\/DiscordKit\/SH"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/DiscordKit\/documentation\/DiscordKit"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/init()","doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/init(timeout:maxMessageSize:reconnectIntClosure:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/onAuthFailure","doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/onConnStateChange","doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/onEvent","doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/onSessionInvalid","doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/reachable","doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/sessionOpen"]},{"title":"Instance Methods","identifiers":["doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/close(code:)","doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/forceClose(code:shouldReconnect:)","doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/getIdentify()","doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/getResume(seq:sessionID:)","doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/open()","doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/send(op:data:completionHandler:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/ObservableObject-Implementations","doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/URLSessionWebSocketDelegate-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/discordkit\/robustwebsocket"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RobustWebSocket"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket"},{"type":"text","text":" is more than just a WebSocket wrapper; It handles"},{"type":"text","text":" "},{"type":"text","text":"everything from identifying with the Gateway to resuming a broken"},{"type":"text","text":" "},{"type":"text","text":"connection. Reconnection is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"very"}]},{"type":"text","text":" reliable, and is one of the main"},{"type":"text","text":" "},{"type":"text","text":"considerations when writing this class."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The reconnection logic is inspired by"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/appuri\/robust-websocket"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"a very robust WebSocket wrapper for JavaScript."}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/DiscordGateway"},{"type":"text","text":" instead of this class - it uses "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket"},{"type":"text","text":" "},{"type":"text","text":"underlyingly and is higher-level for more ease of use."}]}]}]}],"references":{"doc://DiscordKit/objc(pl)NSURLSessionWebSocketDelegate":{"type":"unresolvable","title":"Foundation.URLSessionWebSocketDelegate","identifier":"doc:\/\/DiscordKit\/objc(pl)NSURLSessionWebSocketDelegate"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/getIdentify()":{"role":"symbol","title":"getIdentify()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getIdentify"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"GatewayIdentify","preciseIdentifier":"s:10DiscordKit15GatewayIdentifyV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a "},{"type":"codeVoice","code":"GatewayIdentify"},{"type":"text","text":" struct for identification"},{"type":"text","text":" "},{"type":"text","text":"during Gateway connection"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/getIdentify()","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/getidentify()"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/onConnStateChange":{"role":"symbol","title":"onConnStateChange","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"onConnStateChange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventDispatch","preciseIdentifier":"s:10DiscordKit13EventDispatchC"},{"kind":"text","text":"<("},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")>"}],"abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/EventDispatch"},{"type":"text","text":" that is notified when the session opens\/closes"},{"type":"text","text":" "},{"type":"text","text":"or reachability status changes. Event is notified with"},{"type":"text","text":" "},{"type":"text","text":"a (sessionOpen: Bool, reachable: Bool) tuple."}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/onConnStateChange","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/onconnstatechange"},"doc://DiscordKit/documentation/DiscordKit/EventDispatch":{"role":"symbol","title":"EventDispatch","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventDispatch"}],"abstract":[{"type":"codeVoice","code":"EventDispatch"},{"type":"text","text":" is a helper class that can be used to implement"},{"type":"text","text":" "},{"type":"text","text":"event publishing\/subscribing in Swift."}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/EventDispatch","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventDispatch"}],"url":"\/documentation\/discordkit\/eventdispatch"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/URLSessionWebSocketDelegate-Implementations":{"role":"collectionGroup","title":"URLSessionWebSocketDelegate Implementations","abstract":[],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/URLSessionWebSocketDelegate-Implementations","kind":"article","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/urlsessionwebsocketdelegate-implementations"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/sessionOpen":{"role":"symbol","title":"sessionOpen","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"sessionOpen"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"If a session with the Gateway is established"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/sessionOpen","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/sessionopen"},"doc://DiscordKit/documentation/DiscordKit/DiscordGateway":{"role":"symbol","title":"DiscordGateway","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscordGateway"}],"abstract":[{"type":"text","text":"Higher-level Gateway manager, mainly for handling and dispatching"},{"type":"text","text":" "},{"type":"text","text":"Gateway events"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/DiscordGateway","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DiscordGateway"}],"url":"\/documentation\/discordkit\/discordgateway"},"doc://DiscordKit/documentation/DiscordKit":{"role":"collection","title":"DiscordKit","abstract":[{"type":"text","text":"DiscordKit: A Discord API implementation for Swift."}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit","kind":"symbol","type":"topic","url":"\/documentation\/discordkit"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/getResume(seq:sessionID:)":{"role":"symbol","title":"getResume(seq:sessionID:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getResume"},{"kind":"text","text":"("},{"kind":"externalParam","text":"seq"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sessionID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GatewayResume","preciseIdentifier":"s:10DiscordKit13GatewayResumeV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a GatewayResume struct based on the provided session ID and sequence"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/getResume(seq:sessionID:)","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/getresume(seq:sessionid:)"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/init(timeout:maxMessageSize:reconnectIntClosure:)":{"role":"symbol","title":"init(timeout:maxMessageSize:reconnectIntClosure:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxMessageSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"reconnectIntClosure"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"URLSessionWebSocketTask","preciseIdentifier":"c:objc(cs)NSURLSessionWebSocketTask"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CloseCode","preciseIdentifier":"c:@E@NSURLSessionWebSocketCloseCode"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Inits an instance of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket"},{"type":"text","text":" with provided parameters"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/init(timeout:maxMessageSize:reconnectIntClosure:)","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/init(timeout:maxmessagesize:reconnectintclosure:)"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/close(code:)":{"role":"symbol","title":"close(code:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"code"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLSessionWebSocketTask","preciseIdentifier":"c:objc(cs)NSURLSessionWebSocketTask"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CloseCode","preciseIdentifier":"c:@E@NSURLSessionWebSocketCloseCode"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Explicitly close the Gateway socket connection"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/close(code:)","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/close(code:)"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/open()":{"role":"symbol","title":"open()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"open"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Initiates a Gateway socket connection"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/open()","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/open()"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/onEvent":{"role":"symbol","title":"onEvent","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"onEvent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventDispatch","preciseIdentifier":"s:10DiscordKit13EventDispatchC"},{"kind":"text","text":"<("},{"kind":"typeIdentifier","text":"GatewayEvent","preciseIdentifier":"s:10DiscordKit12GatewayEventO"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GatewayData","preciseIdentifier":"s:10DiscordKit11GatewayDataP"},{"kind":"text","text":"?)>"}],"abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/EventDispatch"},{"type":"text","text":" that is notified when an event dispatch"},{"type":"text","text":" "},{"type":"text","text":"is received from the Gateway"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/onEvent","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/onevent"},"doc://DiscordKit/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/DiscordKit\/SQ"},"https://github.com/appuri/robust-websocket":{"title":"robust-websocket","titleInlineContent":[{"type":"text","text":"robust-websocket"}],"type":"link","identifier":"https:\/\/github.com\/appuri\/robust-websocket","url":"https:\/\/github.com\/appuri\/robust-websocket"},"doc://DiscordKit/documentation/DiscordKit/DecompressionEngine":{"role":"symbol","title":"DecompressionEngine","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecompressionEngine"}],"abstract":[{"type":"text","text":"Decompresses "},{"type":"codeVoice","code":"zlib-stream"},{"type":"text","text":"-compressed payloads received"},{"type":"text","text":" "},{"type":"text","text":"from the Gateway"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/DecompressionEngine","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecompressionEngine"}],"url":"\/documentation\/discordkit\/decompressionengine"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/onAuthFailure":{"role":"symbol","title":"onAuthFailure","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"onAuthFailure"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventDispatch","preciseIdentifier":"s:10DiscordKit13EventDispatchC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/EventDispatch"},{"type":"text","text":" that is notified when the gateway closes"},{"type":"text","text":" "},{"type":"text","text":"with an auth failure, or when the token is not present"},{"type":"text","text":" "},{"type":"text","text":"in the keychain"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/onAuthFailure","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/onauthfailure"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/send(op:data:completionHandler:)":{"role":"symbol","title":"send(op:data:completionHandler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"op"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GatewayOutgoingOpcodes","preciseIdentifier":"s:10DiscordKit22GatewayOutgoingOpcodesO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completionHandler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Send a outgoing payload to the Gateway"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/send(op:data:completionHandler:)","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/send(op:data:completionhandler:)"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/onSessionInvalid":{"role":"symbol","title":"onSessionInvalid","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"onSessionInvalid"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventDispatch","preciseIdentifier":"s:10DiscordKit13EventDispatchC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/EventDispatch"},{"type":"text","text":" that is notified when the session cannot be"},{"type":"text","text":" "},{"type":"text","text":"resumed, most likely when the socket has been disconnected for too"},{"type":"text","text":" "},{"type":"text","text":"long and the session is invalidated. A fresh reconnection will"},{"type":"text","text":" "},{"type":"text","text":"be attempted if\/when this happens."}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/onSessionInvalid","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/onsessioninvalid"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/forceClose(code:shouldReconnect:)":{"role":"symbol","title":"forceClose(code:shouldReconnect:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forceClose"},{"kind":"text","text":"("},{"kind":"externalParam","text":"code"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLSessionWebSocketTask","preciseIdentifier":"c:objc(cs)NSURLSessionWebSocketTask"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CloseCode","preciseIdentifier":"c:@E@NSURLSessionWebSocketCloseCode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"shouldReconnect"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Forcefully close the Gateway socket connection"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/forceClose(code:shouldReconnect:)","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/forceclose(code:shouldreconnect:)"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/reachable":{"role":"symbol","title":"reachable","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reachable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"If the network is reachable (has network connectivity)"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/reachable","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/reachable"},"doc://DiscordKit/objc(pl)NSObject":{"type":"unresolvable","title":"ObjectiveC.NSObjectProtocol","identifier":"doc:\/\/DiscordKit\/objc(pl)NSObject"},"doc://DiscordKit/7Combine16ObservableObjectP":{"type":"unresolvable","title":"Combine.ObservableObject","identifier":"doc:\/\/DiscordKit\/7Combine16ObservableObjectP"},"doc://DiscordKit/s7CVarArgP":{"type":"unresolvable","title":"Swift.CVarArg","identifier":"doc:\/\/DiscordKit\/s7CVarArgP"},"doc://DiscordKit/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/DiscordKit\/s23CustomStringConvertibleP"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Inits an instance of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket"},{"type":"text","text":" with all parameters set"},{"type":"text","text":" "},{"type":"text","text":"to reasonable defaults."}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/init()","kind":"symbol","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/init()"},"doc://DiscordKit/objc(pl)NSURLSessionDelegate":{"type":"unresolvable","title":"Foundation.URLSessionDelegate","identifier":"doc:\/\/DiscordKit\/objc(pl)NSURLSessionDelegate"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket":{"role":"symbol","title":"RobustWebSocket","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RobustWebSocket"}],"abstract":[{"type":"text","text":"A robust WebSocket that handles resuming, reconnection and heartbeats"},{"type":"text","text":" "},{"type":"text","text":"with the Discord Gateway"}],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RobustWebSocket"}],"url":"\/documentation\/discordkit\/robustwebsocket"},"doc://DiscordKit/documentation/DiscordKit/RobustWebSocket/ObservableObject-Implementations":{"role":"collectionGroup","title":"ObservableObject Implementations","abstract":[],"identifier":"doc:\/\/DiscordKit\/documentation\/DiscordKit\/RobustWebSocket\/ObservableObject-Implementations","kind":"article","type":"topic","url":"\/documentation\/discordkit\/robustwebsocket\/observableobject-implementations"},"doc://DiscordKit/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/DiscordKit\/s28CustomDebugStringConvertibleP"},"doc://DiscordKit/objc(pl)NSURLSessionTaskDelegate":{"type":"unresolvable","title":"Foundation.URLSessionTaskDelegate","identifier":"doc:\/\/DiscordKit\/objc(pl)NSURLSessionTaskDelegate"},"doc://DiscordKit/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/DiscordKit\/SH"}}}